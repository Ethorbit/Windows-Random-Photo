/* TIScript code by: Ethan Christie */

//////////////////////////////////////////////////////////////
// Handle button menus:
view.on("size", () =>
{
    ExtendMenu();
});

view.on("move", () =>
{
    ExtendMenu();
});

function ExtendMenu()
{
    for (var v in $$(.BtnMenu))
    { 
        v.style["height"] = 5000;
        v.style["height"] = GetTallestElement(v.$(.container)).box(#height) + $(#ImgOverlay).box(#height);
        v.$(.container).style["height"] = v.box(#height);
    }
}

function HideMenus(whitelist)
{
    for (var v in $$(.BtnMenu)) // Hide all other menus
    {
        v.style["height"] = 0;
        if (v != whitelist) v.style["visibility"] = "none";
    }
}

function ShowMenu(element)
{
    HideMenus(element);
    element.style["visibility"] = "visible";
    element.attributes["fade"] = "none";
    element.attributes["fade"] = "in";
    ExtendMenu();
    HideArrows();
}

//////////////////////////////////////////////////////////////
// Add image menu functionality:
var onImgMenuBtn = false;
for (var (k,v) in $$(.ImgMenuBtn))
{
    v.on("mouseenter", () => 
    {
        onImgMenuBtn = true;
    })

    v.on("mouseleave", () => 
    {
        onImgMenuBtn = false;
    })
}

$(#ImgOverlay).on("mousemove", () =>
{  
    MovedMouse = true;
    if (!onToolbar && !MenuIsOpen())
        $(#ImgMenu).style["visibility"] = "visible";      
});

$(#ImgOverlay).on("mouseleave", () =>
{
    HideArrows();
});

var MovedMouse = false;
event mousestop
{
    MovedMouse = false;
    self.timer(700ms, () =>
    {
        if (!MovedMouse)
            HideArrows();

        return false;
    });
}

function HideArrows()
{
    if (!onImgMenuBtn)
        $(#ImgMenu).style["visibility"] = "none";
}

///////////////////////////////////////////////////////////////////////////
// Handle custom element tool tips:
for (var (k, v) in $$(img[alt=hint]))
{
    var eleCount = k;
    v.on("mouseenter", (me) =>
    {   
        var hintTxt = $$(.HintText)[eleCount];
        hintTxt.style["visibility"] = "visible";
        var (xx, yy) = view.cursorLocation();
        hintTxt.style["top"] = yy;
        hintTxt.style["left"] = xx - 50;
    });

    v.on("mouseleave", (me) =>
    {   
        $$(.HintText)[eleCount].style["visibility"] = "none";
    });
}
////////////////////////////////////////////////////////////
// Handle slider displays:
for (var v in $$(.sliderEle))
{
    v.on("change", (me) =>
    {
        if (me.target.next.attributes["data"] == "s")
            me.target.next.text = me.target.value + "s";
        if (me.target.next.attributes["data"] == "ms")
            me.target.next.text = me.target.value + "ms";
        if (me.target.next.attributes["data"] == "%")  
            me.target.next.text = me.target.value + "%";
    });
}

//////////////////////////////////////////////////////////////
// Handle hotkey input boxes:
for (var v in $(#SettingsMenu).$$(input[type=text]))
{
    v.on("focus", (me) =>
    {
        me.target.text = " ";
    });
}